{"ast":null,"code":"var _jsxFileName = \"/Users/luisbeltran/Desktop/Programming/React/Scrimba/Project 4 Tenzies/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport Die from \"./Die\";\nimport { nanoid } from \"nanoid\";\nimport Confetti from \"react-confetti\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [dice, setDice] = useState(allNewDice());\n  const [tenzies, setTenzies] = useState(false);\n  const [rollCount, setRollCount] = useState(0);\n  const [timer, setTimer] = useState(0);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [record, setRecord] = useState(() => JSON.parse(localStorage.getItem(\"record\")) || Infinity);\n  const [timeRecord, setTimeRecord] = useState(() => JSON.parse(localStorage.getItem(\"timeRecord\")) || Infinity);\n  const audioRef = useRef(null);\n  useEffect(() => {\n    const allHeld = dice.every(die => die.isHeld);\n    const firstValue = dice[0].value;\n    const allSameValue = dice.every(die => die.value === firstValue);\n    if (allHeld && allSameValue) {\n      setTenzies(true);\n      setIsTimerRunning(false);\n      if (audioRef.current) {\n        audioRef.current.play();\n      }\n      if (rollCount < record) {\n        setRecord(rollCount);\n        localStorage.setItem(\"record\", JSON.stringify(rollCount));\n      }\n      if (timer < timeRecord) {\n        setTimeRecord(timer);\n        localStorage.setItem(\"timeRecord\", JSON.stringify(timer));\n      }\n    }\n  }, [dice]);\n  useEffect(() => {\n    let timerInterval;\n    if (isTimerRunning) {\n      timerInterval = setInterval(() => {\n        setTimer(prevTime => prevTime + 10);\n      }, 10);\n    } else if (!isTimerRunning) {\n      clearInterval(timerInterval);\n    }\n    return () => clearInterval(timerInterval);\n  }, [isTimerRunning]);\n  function generateNewDie() {\n    return {\n      value: Math.ceil(Math.random() * 6),\n      isHeld: false,\n      id: nanoid()\n    };\n  }\n  function allNewDice() {\n    const newDice = [];\n    for (let i = 0; i < 10; i++) {\n      newDice.push(generateNewDie());\n    }\n    return newDice;\n  }\n  function rollDice() {\n    if (!tenzies) {\n      setDice(oldDice => oldDice.map(die => {\n        return die.isHeld ? die : generateNewDie();\n      }));\n      setRollCount(prevCount => prevCount + 1);\n      if (rollCount === 0) {\n        setIsTimerRunning(true);\n      }\n    } else {\n      setTenzies(false);\n      setDice(allNewDice());\n      setRollCount(0);\n      setTimer(0);\n      setIsTimerRunning(false);\n    }\n  }\n  function holdDice(id) {\n    setDice(oldDice => oldDice.map(die => {\n      return die.id === id ? {\n        ...die,\n        isHeld: !die.isHeld\n      } : die;\n    }));\n  }\n  const diceElements = dice.map(die => /*#__PURE__*/_jsxDEV(Die, {\n    value: die.value,\n    isHeld: die.isHeld,\n    holdDice: () => holdDice(die.id)\n  }, die.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this));\n\n  // Format the timer to display in milliseconds\n  const formattedTime = (timer / 1000).toFixed(2);\n  const formattedTimeRecord = (timeRecord / 1000).toFixed(2);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main-container\",\n    children: [tenzies && /*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Tenzies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-container\",\n      children: diceElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"roll-dice\",\n      onClick: rollDice,\n      children: tenzies ? \"New Game\" : \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"roll-count\",\n        children: [\"Roll Count: \", rollCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"timer\",\n        children: [\"Time: \", formattedTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"record\",\n      children: [\"Record: \", record === Infinity ? \"N/A\" : record, \" Rolls\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"time-record\",\n      children: [\"Best Time: \", timeRecord === Infinity ? \"N/A\" : formattedTimeRecord, \" s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: \"/fanfare.mp3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"ggLdGAt/Xz3hlf5PQdM5i2v3NLw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Die","nanoid","Confetti","jsxDEV","_jsxDEV","App","_s","dice","setDice","allNewDice","tenzies","setTenzies","rollCount","setRollCount","timer","setTimer","isTimerRunning","setIsTimerRunning","record","setRecord","JSON","parse","localStorage","getItem","Infinity","timeRecord","setTimeRecord","audioRef","allHeld","every","die","isHeld","firstValue","value","allSameValue","current","play","setItem","stringify","timerInterval","setInterval","prevTime","clearInterval","generateNewDie","Math","ceil","random","id","newDice","i","push","rollDice","oldDice","map","prevCount","holdDice","diceElements","fileName","_jsxFileName","lineNumber","columnNumber","formattedTime","toFixed","formattedTimeRecord","className","children","onClick","ref","src","_c","$RefreshReg$"],"sources":["/Users/luisbeltran/Desktop/Programming/React/Scrimba/Project 4 Tenzies/src/App.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport Die from \"./Die\";\nimport { nanoid } from \"nanoid\";\nimport Confetti from \"react-confetti\";\n\nexport default function App() {\n    const [dice, setDice] = useState(allNewDice());\n    const [tenzies, setTenzies] = useState(false);\n    const [rollCount, setRollCount] = useState(0);\n    const [timer, setTimer] = useState(0);\n    const [isTimerRunning, setIsTimerRunning] = useState(false);\n    const [record, setRecord] = useState(() => JSON.parse(localStorage.getItem(\"record\")) || Infinity);\n    const [timeRecord, setTimeRecord] = useState(() => JSON.parse(localStorage.getItem(\"timeRecord\")) || Infinity);\n    const audioRef = useRef(null);\n\n    useEffect(() => {\n        const allHeld = dice.every(die => die.isHeld);\n        const firstValue = dice[0].value;\n        const allSameValue = dice.every(die => die.value === firstValue);\n        if (allHeld && allSameValue) {\n            setTenzies(true);\n            setIsTimerRunning(false);\n            if (audioRef.current) {\n                audioRef.current.play();\n            }\n            if (rollCount < record) {\n                setRecord(rollCount);\n                localStorage.setItem(\"record\", JSON.stringify(rollCount));\n            }\n            if (timer < timeRecord) {\n                setTimeRecord(timer);\n                localStorage.setItem(\"timeRecord\", JSON.stringify(timer));\n            }\n        }\n    }, [dice]);\n\n    useEffect(() => {\n        let timerInterval;\n        if (isTimerRunning) {\n            timerInterval = setInterval(() => {\n                setTimer(prevTime => prevTime + 10);\n            }, 10);\n        } else if (!isTimerRunning) {\n            clearInterval(timerInterval);\n        }\n        return () => clearInterval(timerInterval);\n    }, [isTimerRunning]);\n\n    function generateNewDie() {\n        return {\n            value: Math.ceil(Math.random() * 6),\n            isHeld: false,\n            id: nanoid()\n        };\n    }\n    \n    function allNewDice() {\n        const newDice = [];\n        for (let i = 0; i < 10; i++) {\n            newDice.push(generateNewDie());\n        }\n        return newDice;\n    }\n    \n    function rollDice() {\n        if (!tenzies) {\n            setDice(oldDice => oldDice.map(die => {\n                return die.isHeld ? \n                    die :\n                    generateNewDie();\n            }));\n            setRollCount(prevCount => prevCount + 1);\n            if (rollCount === 0) {\n                setIsTimerRunning(true);\n            }\n        } else {\n            setTenzies(false);\n            setDice(allNewDice());\n            setRollCount(0);\n            setTimer(0);\n            setIsTimerRunning(false);\n        }\n    }\n    \n    function holdDice(id) {\n        setDice(oldDice => oldDice.map(die => {\n            return die.id === id ? \n                {...die, isHeld: !die.isHeld} :\n                die;\n        }));\n    }\n    \n    const diceElements = dice.map(die => (\n        <Die \n            key={die.id} \n            value={die.value} \n            isHeld={die.isHeld} \n            holdDice={() => holdDice(die.id)}\n        />\n    ));\n\n    // Format the timer to display in milliseconds\n    const formattedTime = (timer / 1000).toFixed(2);\n    const formattedTimeRecord = (timeRecord / 1000).toFixed(2);\n\n    return (\n        <main className=\"main-container\">\n            {tenzies && <Confetti />}\n            <h1 className=\"title\">Tenzies</h1>\n            <p className=\"instructions\">Roll until all dice are the same. \n            Click each die to freeze it at its current value between rolls.</p>\n            <div className=\"dice-container\">\n                {diceElements}\n            </div>\n            <button \n                className=\"roll-dice\" \n                onClick={rollDice}\n            >\n                {tenzies ? \"New Game\" : \"Roll\"}\n            </button>\n            <div className=\"status-container\">\n                <p className=\"roll-count\">Roll Count: {rollCount}</p>\n                <p className=\"timer\">Time: {formattedTime}</p>\n            </div>\n            <p className=\"record\">Record: {record === Infinity ? \"N/A\" : record} Rolls</p>\n            <p className=\"time-record\">Best Time: {timeRecord === Infinity ? \"N/A\" : formattedTimeRecord} s</p>\n            <audio ref={audioRef} src=\"/fanfare.mp3\" />\n        </main>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}